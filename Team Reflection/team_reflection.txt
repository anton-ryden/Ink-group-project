Team Reflection - Group Ink

Each entry will be about 1 week apart.

-------(WEEK 3)---------

This team reflection we discuss our application of scrum, design decisions and product structure and social contract and effort

Right now the scope of the project is rather small but we plan on expanding the further we go. the priority of features were discussed within the group. 
The features that are most vital for the project to work were labled with a higher priority and those that weren't with a lower. 

We haven't changed anything in our social contract but we have followed the rules it contains. Mainly booking meetings and everyone expressing their thoughts.
This week we spent about 7-8 hours and we believe we are on track. We have managed to set a foundation for our project and are ready for our first sprint.
Most importantly we want to learn as much as possible about working together in a group and programming. We will see this project as a success as long as the most vital user stories are completed.


We have decided to a class diagram to better agree on the structure of our code. We will mainly use trello for documentation, 
the trello will also be updated frequently whenever we think of something new or something that needs to be improved.
It will be difficult to ensure code quality but we will make sure to do rigorous testing and also have the PO check the final result if it works properly.

We divided the work in groups of 2. Where each group is responsible for several user stories. 
These user stories have an assigned PO which is one of the other groups. 
This allows us to work in smaller groups and share ideas/thoughts within your subgroup.
We used a trello board and took inspiration from a exercise session how the structure should look like. This made it possible
to come up with various epics and user stories.

What we want it to be (B & C)
At this point we wished we would have had more features in mind for the project as it currently feels small for the amount of sprints we would have available for this. We also wished that we had started working at this point.
The plan to do this would have been to start working with the features we already had planned earlier even though we still felt like the project was lacking in size. If we started working earlier, we would have been able to experience a lot more of our limitations in terms of amount of work done per sprint and new features would have been easier to plan.

-------(WEEK 4)---------

Customer Value and Scope:
This sprint we have been developing the feature to create accounts and a loginpage which includes a database and GUI. We also developed the feature to see the poverty status of a country by using an open data source. We've also created a visible map where you can click and zoom on the different countries to highlight them and see the name of the country. The priority of the features were prioritized as the order in the text.

For this week's sprint we achieved what we wanted to do this sprint which is the interactable map, the account/loginpage and being able to extract data about a certain country from an open data source. We discussed each others problems and came up with the best possible solutions that makes it easier to merge each feature into a complete application. This meant learning about how every feature was constructed so that every individual knows how to utilize each others functions/code. 

With effort estimation we divided the tasks evenly among the group members. Certain acceptance critera resulted in some group members being unable to progress their own feature without others finishing theirs. This resulted in a lot of communication between the group members and a lot of group members helping each other out with their tasks. 

Every PO checked the acceptance criteria for the tasks in this sprint and made sure that each feature worked as intented. The value of the acceptance tests are that they provide us with checkpoints that the project is going as intented and the epics are working as planned. 

The three KPIs we used are team velocity, team satisfaction and sprint burndown-chart. The sprint burndown-chart made us realise earlier in the week that we didn't have a lot of progress into the project which made us have to drastically increase the amount of work we put in this sprint for us to have a reasonable sprint burndown-chart. This resulted in a high team velocity and if this team velocity is kept up during the next few sprints, the project is estimated to be finished earlier than planned. The high team velocity also resulted in every group member fulfilling their role in the social contract. 

Social Contract and Effort:
We haven't changed anything in our social contract but we have followed the rules it contains.

This week we had three meetings with a total time of 10 hours where everyone participated and approximately 20 hours of working on the application. This week's hours were a lot higher because we were behind compared to the expected progress we were supposed to have at this sprint.

Design decisions and product structure:
We decided to use sqlite which is a more light weight database framework and easier to use/setup, thus makes it more user friendly. We've discussed architecture patterns briefly, mainly how features are going to be merged. We tried to make the application as graphical and user friendly/intuitive as possible

Documentation is something we really need to work on during next sprint since we've been slacking with it.

We haven't had the time to go through each others codes yet.

Application of Scrum:
We have a scrum master and everyone is at least PO for one user story each week. By having POs for user stories thats not their own, we ensureu the acceptance criteria are met. 

We have had a lot of meetings and used sprints. The meetings have been good for raising issues and asking about potential merge conflicts. During the meetings it's also easy to discuss potential problems you've had encountered.

This sprint every user story have had a PO assigned to them. No user story got rejected from the POs but feedback were given for most of them. 

We are all using the same IDE (Intellij) which also gives us the option to use the "Code With Me" plugin. We have been using Intellij for a long time however Code With Me was suggested by one of the team members so we learned to utilize it and it made things smoother to work on the same code.

Nothing from literature however a lot from the latest guest lecture. For example, making sure everyone participate in the meetings and not being afraid of poking for answers. Do not ask yes or no questions as a Scrum master. 


What we want it to be (B & C)
For this week we felt as if we got a massive amount of work and progress done in the project. However we do feel like it was too much for a single sprint and we would have rather split the amount of week atleast between the previous sprint and the current sprint. This could have been done if we focused on getting the project going the previous weeks.

-------(WEEK 5)---------
Customer Value and Scope:
This sprint we have focused on mainly improving our features and small quality of life changes which includes more work with UI(Graphs displaying information, colors that signify how much a certain country is in Poverty), grabbing certain data from databases and being able to stay logged in with an account.

This sprint, we encountered quite a few problem however we feel that the teamwork has been good. We aren't really happy regarding the team velocity due to our user story application which resulted in slower work than usual as some stories depended on others. However this was also because everyone in the group had a chance to touch on eachothers code which takes time to get familiarized too.

Like last sprint, we divided the tasks in what we felt was fair amount the team members. This week was especially heavy on communication due to several big features being merged this week and worked upon which means that a certain level of understanding of eachothers code was neccessary. This resulted in a lot of questions and people communicating about their code and purpose.

This sprint was mainly adjusting the features and adding to them so that they would meet the PO's acceptance criteria and checkpoints.

Nothing has changed as of last week regarding KPIs.

Social Contract and Effort:
Regarding the social contract, that hasn't been altered but we followed the same rules that we set in week 1.

This week, we have put in around 20 hours of development and meetings. These hours were mostly due to meetings that involved in helping others understand eachothers code. 

Design decisions and product structure:
Our design decisions and product structures are the same as last week.
We haven't started documenting yet which is one of our main weaknesses that would have made communication a lot easier.
We have only discussed what kind of documentation we were gonna use which was Javadoc. We often communicate solutions during
difficult issues and try to choose the best and most convenient solution to ensure code quality.

Application of Scrum
Nothing has changed this week in terms of our application of scrum. 
We have however split a few user stories in to sub stories to make the user stories more independent which allowed for members to work
on separate features. 

What we want it to be (B & C)
This week we wished the work progressed more smoothly however this wasnt the case due to certain user stories relying on other user stories to be completed. This made it so that some user stories had to be put on hold and some peoples work got delayed. The fact that everyone had to get familiarised with eachothers code also contributed. We also wished that we had documeneted a lot more this week as our project currently lacks documentation. This would have been fixed if we had decided early on that what we would document with and started documenting from the beginning. The user story issue would have been solved had we focused more properly on separating our user stories in to more independent user stories. 

-------(WEEK 6)---------
Customer Value and Scope
This sprint mainly revolved around the group optimizing the code which included gathering most information that was spread in different files in to
a collective database. A lot of optimizations and changes had to be made regarding code that did not use databases and instead used other files to 
search for information such as CSV files. Some of the work this week also went in to planning the UI for our donation panel and implementing the 
UI. An example of this is the implementation of being able to check how many meals a certain amount of donation can provide. An additional feature 
that was incorporated to the map was a drag function that would allow you to zoom in and out at preference. A bug that involved the resizing of the 
window was also fixed. We have also worked on adding documentation to our code this week.

Compared to the previous sprints, this week has been a bit lacking in communication and we've also ran in to the same issues that occured last week 
which was some user stories not being entirely separate which resulted in some of the user stories that were being worked on this week to be 
reliant on other user stories to be finished.

This sprint, there werent as many tasks to divide but we still split them up in what we felt was fair with peoples interest on the task in to account. As usual the effort estimation and task breakdown ensured that everyone had a task assigned that we felt was proper and fair.

Our procedure hasn't changed but not everything has gone through the acceptance tests this week.

We saw last week that we had a relatively low team satisfaction that we took in to account this week. We also saw a decrease in team velocity
which resulted in the group trying to finish more tasks this sprint in order to cover more points in the team velocity.

Social Contract and EFfort:
No changes have been made to the social contract.

This week a bit less work was put in which resulted in around 16-17 hours which is a decrease from the previous weeks. This was mostly due to our 
sprint having its work revolved around existing features and mostly optimising. This meant less research in to newer things to add which decreased 
the amount of time taken. 

Design descisions and product structure:
Nothing has changed in this area.
We have started documenting with Javadoc quite a bit and commented on the majority of code now. Our code quality and enforcing coding standards are 
made by the project owners overlooking that the features are easy to implement and effective to use.

Application of Scrum:
Nothing drastic has changed, mostly the addition of a few user stories as we figure out more features to incorporate and more optimizations that 
need to be made.


What we want it to be (B & C)
Unfortunately we ran in to the same issues last week due to the user stories entanglement that made it difficult to progress some user stories. This time wasn't as bad seeing as everyone had been more familiarised with eachothers code and could start working on other user stories if the user story they were progressing on was being halted due to another user story not being finished. As we previously mentioned it would be an easy fix if we had properly altered our user stories to be more independent. 

-------(WEEK 7)---------
Customer Value and Scope
This sprint was fixing up the last details which was doing small adjustments such as adding a Hide button to give the option of hiding the information panel, adjustments to the color scheme in displaying different levels of property has been changed to more fitting colors. An additional gradient line for the color codes has been added to make it easier for the user to be able to see the different grades of poverty depending on color. Touching up the UI with more information to cover up empty space such as adding an image of the country your clicking on in to the UI. A whole new scene has also been made which shows your User page in which you can see your total donations, which countries you have donated to and how many healthy meals your donations have contributed with. 

The success critera for the team was the most important part this week as it pushed for these adjustments and additional features to be made in order for the project owners success criterias to be fulfilled. Communication has been better this week but it is also because we have learnt the importance of splitting up User stories to be independent which lowered the required communication between groups. 

As this was the last week for coding, the remaining tasks werent that big and mostly some small additional features and adjustments to the different panels. This resulted in that it may not have been the most fair distribution of work but the difference was negligible and we still split up the tasks so that everyone so that most user stories were independent of eachother.

Acceptance tests is mainly our PO meetings where we check on the progress made but it went quite well this week as the majority 
of the features and adjustments 

Recently we have had quite a stable team velocity and our team satisfaction has been rising. With these few weeks and the results from the team velocity and sprint burndown chart, i believe that we have gotten a better grasp of understanding our groups effort estimation which we use to make sure we don't go overboard with amount of features and changes.

Social Contract and Effort
Nothing has arised that has made us want to change our social countract. 
We have spent around 20 with meetings and programming. 

Design decisions and product structure
Nothing has changed regarding our design deecisions. 
We have used Javadoc to comment on the majority of our code. 
Anyone who changes anything within functions keep sure to add neccesary Javadoc adjustments later on however we will also make sure that all code will be properly javadocumented before the final turn-in. THis will also enforce the code quality and coding standard towards the end of the sprint. 

Application of Scrum
We are all mostly working individually on user stories assigned at meetings and we've had 3 meetings this week in order to make sure that everything is progressing smoothly. Splitting up the project in to different epics has certainly helped us a lot as it makes it easier to see what user stories fit in what category. It also made it easier to make user stories independent which was also one of the things that helped our group the most this week. Nothing else about our application of scrum has really changed.  We are still utilising the trello boards to make our application of scrum easier and we still use PO's at every meeting to make sure all success criterias are being met. Everyone is learning a different aspect of using and learning differnt tools and technologies with Javafx which makes it easier for everyone to help eachother deepen eachothers knowledge as everyone needs to understand the code to a certain extent. 


What we want it to be (B & C)
This week has been the best week besides week 3 in terms of team satisfaction as we believe that we have learnt a lot from our mistakes, especially with user stories being more independent making the progress this week the most smooth. Not quite sure what we would have wanted to change this week as most people were very satisfied with few issues. 
-------(WEEK 8)---------
Customer Value and Scope
This week has been mostly code cleaning and making sure that everything works. This is mostly in reference to our attempts to create a JAR file which we've had some issues with. 
Our success criterias were mostly met last week so there wasn't a lot to verify this week. Since we didnt program a lot this week, we mostly focused our meetings on other tasks unrelated to the code such as the presentation, preparing for the final report etc. This means that we didn't get to use utilise the user stories. 

Social Contract and Effort
Our social contract hasnt changed.

Design decisions and product structure
Our design decisions remain the same as the last week. 
We have a bit more javadoc comments now and we've been cleaning the code to ensure the code quality and code standard.

Application of Scrum
Nothing has really changed since the last week since we haven't done a lot of programming this week. But we have had quite a few meetings since we need to wrap up the remaining
assignments.


What we want it to be (B & C)
This week there isnt a lot to improve as we haven't been completing any more user stories and mostly focused on cleaning up the code and finishing up other assignments related to the project.
